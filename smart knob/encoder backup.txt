#include <Arduino.h>
#include <Adafruit_NeoPixel.h> //for neopixel
#include <Adafruit_GFX.h> //for oled module
#include <Adafruit_SSD1306.h> //for oled module
#include <Wire.h> //this is for I2C. SPI.h for SPI'
#include <RTClib.h>
#include <Encoder.h>

//sate machine setup
enum State {
  STATE_IDLE,
  STATE_CONFIG_STUDY,
  STATE_CONFIG_BREAK,
  STATE_CONFIG_CYCLE,
  STATE_STUDY,
  STATE_BREAK
};
State currentState = STATE_IDLE;

//neopixel definitions
#define PIN_NEO_PIXEL 5  // Arduino pin that connects to NeoPixel
#define NUM_PIXELS 24    // The number of LEDs (pixels) on NeoPixel
#define STUDY_PIXELS_PER_MINS 5 // number of mins which acts as one pixel in NeoPixel
#define BREAK_PIXELS_PER_MINS 1
#define CYCLE_PIXELS_PER_MINS 1
#define MAX_STUDY_TIME 120
#define MIN_STUDY_TIME 25
#define MAX_BREAK_TIME 15
#define MIN_BREAK_TIME 5
#define MAX_CYCLE_TIME 5
#define MIN_CYCLE_TIME 1
#define STUDY_MIN_COLOR 250, 100, 0
#define STUDY_ADDITIONAL_TIME 252, 143, 71
#define BREAK_MIN_COLOR 0, 255, 255
#define BREAK_ADDITIONAL_TIME 100, 250, 255
#define CYCLE_MIN_COLOR 200, 0, 255
#define CYCLE_ADDITIONAL_TIME 220, 100, 255


Adafruit_NeoPixel NeoPixel(NUM_PIXELS, PIN_NEO_PIXEL, NEO_GRB + NEO_KHZ800); //neopixel instance

int study_time = MIN_STUDY_TIME; //will be in minutes. Need to take input from user. 
int break_time = MIN_BREAK_TIME;
int cycle = 2;
int state=0;

//oled module definitions
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

Adafruit_SSD1306 oled(SCREEN_WIDTH,SCREEN_HEIGHT,&Wire,-1); //oled module instance

#define FRAME_DELAY (0)
#define FRAME_WIDTH (48)
#define FRAME_HEIGHT (48)

RTC_DS1307 rtc;

// encoder definitions
#define ENCODER_CLK 2 // for encoder CLK pin
#define ENCODER_DT  3 //for encoder DT pin
#define ENCODER_BUTTON 4 // for encoder SW pin
int lastClk = HIGH;
long lastPos = 0;
Encoder knob(ENCODER_DT, ENCODER_CLK );


//idle animation
#define IDLE_FRAME_COUNT (sizeof(idle_frames) / sizeof(idle_frames[0]))
const byte PROGMEM idle_frames[][288] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,240,0,0,0,0,127,254,0,0,0,0,240,15,0,0,0,1,192,7,128,0,0,3,128,1,128,0,0,3,0,0,192,0,0,7,0,0,224,0,0,6,0,0,96,0,0,6,0,0,96,0,0,12,0,0,48,0,0,12,48,64,48,0,0,24,112,224,56,0,0,24,112,224,24,0,0,56,112,224,28,0,0,112,48,224,15,0,1,224,0,0,7,192,3,128,0,0,1,224,6,0,0,0,0,112,12,0,0,0,0,56,24,0,0,0,0,24,24,0,0,0,0,24,48,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,60,0,0,0,0,12,63,0,0,0,0,12,3,128,0,0,0,252,1,192,0,0,1,252,0,192,0,0,3,128,0,192,0,0,6,0,0,192,0,0,6,0,0,96,0,0,6,0,0,96,0,0,12,0,0,96,0,0,12,0,0,120,0,0,24,0,0,62,0,0,120,0,0,7,128,1,240,0,0,1,192,3,192,0,0,0,192,3,0,0,0,0,96,6,0,0,0,0,112,14,0,0,0,0,60,60,0,0,0,0,31,248,0,0,0,0,7,224,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,248,0,0,0,0,127,254,0,0,0,0,240,15,0,0,0,1,192,7,128,0,0,3,128,1,128,0,0,3,0,0,192,0,0,7,0,0,224,0,0,6,0,0,96,0,0,6,0,0,96,0,0,12,0,0,48,0,0,12,48,64,48,0,0,24,112,224,56,0,0,24,112,224,24,0,0,56,112,224,28,0,0,240,48,224,15,0,1,224,0,0,7,192,7,128,0,0,1,224,14,0,0,0,0,112,12,0,0,0,0,56,24,0,0,0,0,24,24,0,0,0,0,24,48,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,60,0,0,0,0,12,63,0,0,0,0,12,3,128,0,0,0,252,1,192,0,0,1,252,0,192,0,0,3,128,0,192,0,0,6,0,0,192,0,0,6,0,0,96,0,0,6,0,0,96,0,0,12,0,0,96,0,0,12,0,0,120,0,0,56,0,0,62,0,0,120,0,0,7,128,1,224,0,0,1,192,3,192,0,0,0,224,3,0,0,0,0,96,6,0,0,0,0,112,14,0,0,0,0,60,60,0,0,0,0,31,248,0,0,0,0,7,224,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,248,0,0,0,0,127,254,0,0,0,0,240,15,0,0,0,1,192,3,128,0,0,3,128,1,192,0,0,3,0,0,192,0,0,7,0,0,224,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,48,0,0,12,48,192,48,0,0,28,112,224,56,0,0,24,112,224,24,0,0,56,112,224,28,0,0,240,48,192,15,0,3,224,0,0,7,192,7,128,0,0,1,224,14,0,0,0,0,112,28,0,0,0,0,56,24,0,0,0,0,24,56,0,0,0,0,24,48,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,62,0,0,0,0,12,63,0,0,0,0,12,3,128,0,0,0,252,1,192,0,0,3,252,0,192,0,0,3,0,0,192,0,0,6,0,0,192,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,96,0,0,28,0,0,120,0,0,56,0,0,30,0,0,112,0,0,7,128,1,224,0,0,1,192,3,128,0,0,0,224,7,0,0,0,0,96,6,0,0,0,0,112,14,0,0,0,0,60,60,0,0,0,0,31,240,0,0,0,0,7,192,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,192,0,0,0,0,31,248,0,0,0,0,126,254,0,0,0,0,224,7,0,0,0,1,192,3,128,0,0,3,128,1,192,0,0,7,0,0,192,0,0,6,0,0,224,0,0,6,0,0,96,0,0,14,0,0,112,0,0,12,0,0,48,0,0,28,48,224,48,0,0,24,112,224,56,0,0,24,112,224,24,0,0,48,112,224,28,0,0,240,32,192,15,0,3,192,0,0,7,192,7,0,0,0,0,240,14,0,0,0,0,112,28,0,0,0,0,56,24,0,0,0,0,24,56,0,0,0,0,24,48,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,62,0,0,0,0,12,31,0,0,0,0,12,3,128,0,0,0,252,0,192,0,0,3,248,0,192,0,0,7,0,0,192,0,0,6,0,0,192,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,112,0,0,28,0,0,60,0,0,56,0,0,31,0,0,240,0,0,7,128,1,224,0,0,1,192,3,128,0,0,0,224,7,0,0,0,0,96,14,0,0,0,0,112,28,0,0,0,0,62,120,0,0,0,0,15,240,0,0,0,0,3,128,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,0,0,0,0,63,252,0,0,0,0,252,62,0,0,0,1,224,7,0,0,0,1,128,3,128,0,0,3,0,1,192,0,0,7,0,0,192,0,0,6,0,0,96,0,0,6,0,0,96,0,0,14,0,0,112,0,0,12,32,64,48,0,0,28,112,224,48,0,0,24,112,224,24,0,0,56,112,224,24,0,0,112,48,224,12,0,1,224,32,64,15,128,3,192,0,0,3,224,7,0,0,0,0,240,14,0,0,0,0,56,28,0,0,0,0,56,24,0,0,0,0,24,56,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,56,0,0,0,0,12,62,0,0,0,0,12,15,128,0,0,0,124,1,192,0,0,1,252,0,192,0,0,3,192,0,192,0,0,7,0,0,192,0,0,6,0,0,64,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,112,0,0,28,0,0,60,0,0,56,0,0,15,0,0,240,0,0,3,128,1,192,0,0,1,192,3,0,0,0,0,224,7,0,0,0,0,112,14,0,0,0,0,56,28,0,0,0,0,31,248,0,0,0,0,15,240,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,240,0,0,0,0,127,254,0,0,0,0,240,15,0,0,0,1,192,7,128,0,0,3,128,1,128,0,0,3,0,0,192,0,0,7,0,0,224,0,0,6,0,0,96,0,0,6,0,0,96,0,0,12,0,0,48,0,0,12,48,64,48,0,0,24,112,224,56,0,0,24,112,224,24,0,0,56,112,224,28,0,0,112,48,224,15,0,1,224,0,0,7,192,3,128,0,0,1,224,6,0,0,0,0,112,12,0,0,0,0,56,24,0,0,0,0,24,24,0,0,0,0,24,48,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,60,0,0,0,0,12,63,0,0,0,0,12,3,128,0,0,0,252,1,192,0,0,1,252,0,192,0,0,3,128,0,192,0,0,6,0,0,192,0,0,6,0,0,96,0,0,6,0,0,96,0,0,12,0,0,96,0,0,12,0,0,120,0,0,24,0,0,62,0,0,120,0,0,7,128,1,240,0,0,1,192,3,192,0,0,0,192,3,0,0,0,0,96,6,0,0,0,0,112,14,0,0,0,0,60,60,0,0,0,0,31,248,0,0,0,0,7,224,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,128,0,0,0,0,31,248,0,0,0,0,127,254,0,0,0,0,224,15,0,0,0,1,192,3,128,0,0,3,128,1,192,0,0,3,0,0,192,0,0,6,0,0,224,0,0,6,0,0,96,0,0,14,0,0,112,0,0,12,0,0,48,0,0,28,48,192,48,0,0,24,112,224,56,0,0,24,112,224,24,0,0,48,112,224,28,0,0,240,48,192,15,0,3,192,0,0,7,192,7,128,0,0,0,224,14,0,0,0,0,112,28,0,0,0,0,56,24,0,0,0,0,24,56,0,0,0,0,24,48,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,62,0,0,0,0,12,31,0,0,0,0,12,3,128,0,0,0,252,1,192,0,0,3,248,0,192,0,0,7,0,0,192,0,0,6,0,0,192,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,112,0,0,28,0,0,60,0,0,56,0,0,31,0,0,240,0,0,7,128,1,224,0,0,1,192,3,128,0,0,0,224,7,0,0,0,0,96,14,0,0,0,0,112,28,0,0,0,0,62,120,0,0,0,0,15,240,0,0,0,0,3,192,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,0,0,0,0,63,252,0,0,0,0,248,62,0,0,0,1,224,7,128,0,0,1,128,3,128,0,0,3,0,1,192,0,0,7,0,0,192,0,0,6,0,0,96,0,0,6,0,0,96,0,0,12,0,0,112,0,0,12,4,16,48,0,0,28,12,24,48,0,0,24,12,56,24,0,0,56,14,56,24,0,0,112,12,24,14,0,1,224,12,16,15,128,3,192,0,0,3,224,7,0,0,0,0,240,14,0,0,0,0,56,28,0,0,0,0,56,24,0,0,0,0,24,56,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,56,0,0,0,0,12,63,0,0,0,0,12,15,128,0,0,0,124,1,192,0,0,1,252,0,192,0,0,3,128,0,192,0,0,7,0,0,192,0,0,6,0,0,64,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,112,0,0,28,0,0,60,0,0,120,0,0,15,0,0,240,0,0,3,128,1,192,0,0,1,192,3,0,0,0,0,224,7,0,0,0,0,112,14,0,0,0,0,56,28,0,0,0,0,31,248,0,0,0,0,15,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,248,0,0,0,0,127,252,0,0,0,0,240,15,0,0,0,1,192,3,128,0,0,3,128,1,192,0,0,3,0,0,192,0,0,7,0,0,224,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,48,0,0,12,1,134,48,0,0,28,3,134,56,0,0,24,3,135,24,0,0,56,3,135,28,0,0,112,3,134,15,0,1,224,0,0,7,192,7,128,0,0,1,224,14,0,0,0,0,112,28,0,0,0,0,56,24,0,0,0,0,24,24,0,0,0,0,24,48,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,60,0,0,0,0,12,63,0,0,0,0,12,3,128,0,0,0,252,1,192,0,0,3,252,0,192,0,0,3,0,0,192,0,0,6,0,0,192,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,96,0,0,28,0,0,120,0,0,56,0,0,30,0,0,120,0,0,7,128,1,224,0,0,1,192,3,128,0,0,0,224,3,0,0,0,0,96,6,0,0,0,0,112,14,0,0,0,0,60,60,0,0,0,0,31,248,0,0,0,0,7,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,7,224,0,0,0,0,63,248,0,0,0,0,126,126,0,0,0,0,224,7,0,0,0,1,192,3,128,0,0,3,128,1,192,0,0,7,0,0,192,0,0,6,0,0,224,0,0,6,0,0,96,0,0,14,0,0,112,0,0,12,0,0,48,0,0,28,1,134,48,0,0,24,3,135,24,0,0,24,3,135,24,0,0,48,3,135,28,0,0,240,1,2,15,128,3,192,0,0,3,192,7,0,0,0,0,240,14,0,0,0,0,112,28,0,0,0,0,56,24,0,0,0,0,24,56,0,0,0,0,24,48,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,62,0,0,0,0,12,31,128,0,0,0,12,3,128,0,0,1,252,0,192,0,0,3,248,0,192,0,0,7,0,0,192,0,0,6,0,0,64,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,112,0,0,28,0,0,60,0,0,56,0,0,31,0,0,240,0,0,3,128,1,224,0,0,1,192,3,128,0,0,0,224,7,0,0,0,0,96,14,0,0,0,0,112,28,0,0,0,0,63,248,0,0,0,0,15,240,0,0,0,0,1,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,15,240,0,0,0,0,127,252,0,0,0,0,248,31,0,0,0,1,224,7,128,0,0,1,128,3,128,0,0,3,0,0,192,0,0,7,0,0,192,0,0,6,0,0,96,0,0,6,0,0,96,0,0,12,0,0,48,0,0,12,0,0,48,0,0,28,3,134,56,0,0,24,3,143,24,0,0,56,3,135,28,0,0,112,0,2,14,0,1,224,0,0,7,192,3,192,0,0,3,224,7,0,0,0,0,112,12,0,0,0,0,56,28,0,0,0,0,24,24,0,0,0,0,24,48,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,56,0,0,0,0,12,63,0,0,0,0,12,3,128,0,0,0,124,1,192,0,0,1,252,0,192,0,0,3,128,0,192,0,0,7,0,0,192,0,0,6,0,0,224,0,0,6,0,0,96,0,0,12,0,0,96,0,0,12,0,0,120,0,0,28,0,0,62,0,0,120,0,0,15,128,0,240,0,0,3,192,1,192,0,0,0,192,3,0,0,0,0,224,7,0,0,0,0,112,14,0,0,0,0,56,60,0,0,0,0,31,248,0,0,0,0,7,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,31,248,0,0,0,0,127,254,0,0,0,0,240,15,0,0,0,1,192,3,128,0,0,3,128,1,192,0,0,3,0,0,192,0,0,7,0,0,224,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,48,0,0,12,0,0,48,0,0,28,0,0,56,0,0,24,7,207,24,0,0,56,0,0,28,0,0,240,0,0,15,0,3,224,0,0,7,192,7,128,0,0,1,224,14,0,0,0,0,112,28,0,0,0,0,56,24,0,0,0,0,24,56,0,0,0,0,24,48,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,62,0,0,0,0,12,63,0,0,0,0,12,3,128,0,0,0,252,1,192,0,0,3,252,0,192,0,0,3,0,0,192,0,0,6,0,0,192,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,96,0,0,28,0,0,120,0,0,56,0,0,30,0,0,112,0,0,7,128,1,224,0,0,1,192,3,128,0,0,0,224,3,0,0,0,0,96,6,0,0,0,0,112,14,0,0,0,0,60,60,0,0,0,0,31,248,0,0,0,0,7,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,3,192,0,0,0,0,63,248,0,0,0,0,126,126,0,0,0,0,224,7,0,0,0,1,192,3,128,0,0,3,128,1,192,0,0,7,0,0,192,0,0,6,0,0,224,0,0,6,0,0,96,0,0,14,0,0,112,0,0,12,0,0,48,0,0,28,0,0,48,0,0,24,0,0,56,0,0,24,3,143,24,0,0,48,0,0,28,0,0,240,0,0,15,128,3,192,0,0,3,192,7,0,0,0,0,240,14,0,0,0,0,112,28,0,0,0,0,56,24,0,0,0,0,24,56,0,0,0,0,24,48,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,62,0,0,0,0,12,31,0,0,0,0,12,3,128,0,0,0,252,0,192,0,0,3,248,0,192,0,0,7,0,0,192,0,0,6,0,0,192,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,112,0,0,28,0,0,60,0,0,56,0,0,31,0,0,240,0,0,3,128,1,224,0,0,1,192,3,128,0,0,0,224,7,0,0,0,0,96,14,0,0,0,0,112,28,0,0,0,0,62,120,0,0,0,0,15,240,0,0,0,0,1,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,7,224,0,0,0,0,63,252,0,0,0,0,252,62,0,0,0,1,224,7,0,0,0,1,128,3,128,0,0,3,0,1,192,0,0,7,0,0,192,0,0,6,0,0,96,0,0,6,0,0,96,0,0,14,0,0,112,0,0,12,0,0,48,0,0,28,0,0,48,0,0,24,3,135,24,0,0,56,3,143,24,0,0,112,0,0,28,0,0,224,0,0,15,128,3,192,0,0,3,224,7,0,0,0,0,240,14,0,0,0,0,56,28,0,0,0,0,56,24,0,0,0,0,24,56,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,56,0,0,0,0,12,62,0,0,0,0,12,15,128,0,0,0,60,1,192,0,0,1,252,0,192,0,0,3,192,0,192,0,0,7,0,0,192,0,0,6,0,0,64,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,112,0,0,28,0,0,60,0,0,56,0,0,15,0,0,240,0,0,3,128,1,192,0,0,1,192,3,128,0,0,0,224,7,0,0,0,0,112,14,0,0,0,0,56,28,0,0,0,0,31,248,0,0,0,0,15,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,15,240,0,0,0,0,63,252,0,0,0,0,248,63,0,0,0,1,224,7,128,0,0,1,128,3,128,0,0,3,0,1,192,0,0,7,0,0,192,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,112,0,0,12,0,0,48,0,0,28,3,6,56,0,0,24,3,135,24,0,0,56,3,135,28,0,0,112,0,2,14,0,1,224,0,0,15,128,3,192,0,0,3,224,7,0,0,0,0,112,12,0,0,0,0,56,28,0,0,0,0,56,24,0,0,0,0,24,56,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,56,0,0,0,0,12,63,0,0,0,0,12,7,128,0,0,0,124,1,192,0,0,1,252,0,192,0,0,3,128,0,192,0,0,7,0,0,192,0,0,6,0,0,64,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,112,0,0,28,0,0,60,0,0,120,0,0,15,128,0,240,0,0,3,128,1,192,0,0,1,192,3,0,0,0,0,224,7,0,0,0,0,112,14,0,0,0,0,56,28,0,0,0,0,31,248,0,0,0,0,15,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,15,240,0,0,0,0,127,252,0,0,0,0,248,31,0,0,0,1,224,7,128,0,0,1,128,3,128,0,0,3,0,0,192,0,0,7,0,0,192,0,0,6,0,0,96,0,0,6,0,0,96,0,0,12,0,0,48,0,0,12,0,0,48,0,0,28,3,134,56,0,0,24,3,135,24,0,0,56,3,135,28,0,0,112,3,134,14,0,1,224,0,0,7,192,3,192,0,0,3,224,7,0,0,0,0,112,12,0,0,0,0,56,28,0,0,0,0,24,24,0,0,0,0,24,48,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,56,0,0,0,0,12,63,0,0,0,0,12,3,128,0,0,0,124,1,192,0,0,1,252,0,192,0,0,3,192,0,192,0,0,7,0,0,192,0,0,6,0,0,224,0,0,6,0,0,96,0,0,12,0,0,96,0,0,12,0,0,120,0,0,28,0,0,62,0,0,120,0,0,15,128,0,240,0,0,3,192,1,192,0,0,0,192,3,0,0,0,0,224,7,0,0,0,0,112,14,0,0,0,0,56,60,0,0,0,0,31,248,0,0,0,0,7,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,15,240,0,0,0,0,63,252,0,0,0,0,248,63,0,0,0,1,224,7,128,0,0,1,128,3,128,0,0,3,0,1,192,0,0,7,0,0,192,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,112,0,0,12,1,2,48,0,0,28,3,134,48,0,0,24,3,135,24,0,0,56,3,135,28,0,0,112,3,135,14,0,1,224,1,2,15,128,3,192,0,0,3,224,7,0,0,0,0,112,12,0,0,0,0,56,28,0,0,0,0,56,24,0,0,0,0,24,56,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,56,0,0,0,0,12,63,0,0,0,0,12,7,128,0,0,0,124,1,192,0,0,1,252,0,192,0,0,3,128,0,192,0,0,7,0,0,192,0,0,6,0,0,64,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,112,0,0,28,0,0,60,0,0,120,0,0,15,0,0,240,0,0,3,128,1,192,0,0,1,192,3,0,0,0,0,224,7,0,0,0,0,112,14,0,0,0,0,56,28,0,0,0,0,31,248,0,0,0,0,15,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,7,224,0,0,0,0,63,252,0,0,0,0,124,126,0,0,0,0,224,7,0,0,0,1,128,3,128,0,0,3,128,1,192,0,0,7,0,0,192,0,0,6,0,0,224,0,0,6,0,0,96,0,0,14,0,0,112,0,0,12,1,2,48,0,0,28,3,134,48,0,0,24,3,135,24,0,0,56,3,135,24,0,0,112,3,135,28,0,0,224,1,6,15,128,3,192,0,0,3,224,7,0,0,0,0,240,14,0,0,0,0,112,28,0,0,0,0,56,24,0,0,0,0,24,56,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,62,0,0,0,0,12,15,128,0,0,0,28,1,192,0,0,1,252,0,192,0,0,3,192,0,192,0,0,7,0,0,192,0,0,6,0,0,64,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,112,0,0,28,0,0,60,0,0,56,0,0,15,0,0,240,0,0,3,128,1,192,0,0,1,192,3,128,0,0,0,224,7,0,0,0,0,112,14,0,0,0,0,56,28,0,0,0,0,63,248,0,0,0,0,15,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,128,0,0,0,0,31,248,0,0,0,0,127,254,0,0,0,0,224,15,0,0,0,1,192,3,128,0,0,3,128,1,192,0,0,3,0,0,192,0,0,6,0,0,224,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,48,0,0,28,3,134,48,0,0,24,3,134,56,0,0,24,3,135,24,0,0,56,3,135,28,0,0,240,3,6,15,0,3,224,0,0,7,192,7,128,0,0,0,224,14,0,0,0,0,112,28,0,0,0,0,56,24,0,0,0,0,24,56,0,0,0,0,24,48,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,62,0,0,0,0,12,31,0,0,0,0,12,3,128,0,0,0,252,1,192,0,0,3,248,0,192,0,0,7,0,0,192,0,0,6,0,0,192,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,112,0,0,28,0,0,60,0,0,56,0,0,31,0,0,240,0,0,7,128,1,224,0,0,1,192,3,128,0,0,0,224,7,0,0,0,0,96,14,0,0,0,0,112,12,0,0,0,0,60,124,0,0,0,0,31,240,0,0,0,0,3,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,31,240,0,0,0,0,127,254,0,0,0,0,240,15,0,0,0,1,192,7,128,0,0,3,128,1,128,0,0,3,0,0,192,0,0,7,0,0,224,0,0,6,0,0,96,0,0,6,0,0,96,0,0,12,0,0,48,0,0,12,1,2,48,0,0,24,3,134,56,0,0,24,3,135,24,0,0,56,3,135,28,0,0,112,3,134,14,0,1,224,1,0,7,192,3,192,0,0,1,224,7,0,0,0,0,112,12,0,0,0,0,56,24,0,0,0,0,24,24,0,0,0,0,24,48,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,60,0,0,0,0,12,63,0,0,0,0,12,3,128,0,0,0,252,1,192,0,0,1,252,0,192,0,0,3,128,0,192,0,0,6,0,0,192,0,0,6,0,0,96,0,0,6,0,0,96,0,0,12,0,0,96,0,0,12,0,0,120,0,0,24,0,0,62,0,0,120,0,0,15,128,1,240,0,0,1,192,3,192,0,0,0,192,3,0,0,0,0,96,6,0,0,0,0,112,14,0,0,0,0,56,60,0,0,0,0,31,248,0,0,0,0,7,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,7,224,0,0,0,0,63,252,0,0,0,0,124,126,0,0,0,0,224,7,0,0,0,1,128,3,128,0,0,3,128,1,192,0,0,7,0,0,192,0,0,6,0,0,224,0,0,6,0,0,96,0,0,14,0,0,112,0,0,12,1,0,48,0,0,28,3,134,48,0,0,24,3,135,24,0,0,56,3,135,24,0,0,48,3,135,28,0,0,224,1,6,15,128,3,192,0,0,3,224,7,0,0,0,0,240,14,0,0,0,0,112,28,0,0,0,0,56,24,0,0,0,0,24,56,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,62,0,0,0,0,12,15,128,0,0,0,28,1,192,0,0,1,252,0,192,0,0,3,224,0,192,0,0,7,0,0,192,0,0,6,0,0,64,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,112,0,0,28,0,0,60,0,0,56,0,0,15,0,0,240,0,0,3,128,1,192,0,0,1,192,3,128,0,0,0,224,7,0,0,0,0,112,14,0,0,0,0,56,28,0,0,0,0,63,248,0,0,0,0,15,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,248,0,0,0,0,127,254,0,0,0,0,240,15,0,0,0,1,192,3,128,0,0,3,128,1,192,0,0,3,0,0,192,0,0,7,0,0,224,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,48,0,0,12,1,134,48,0,0,28,3,134,56,0,0,24,3,135,24,0,0,56,3,135,28,0,0,112,3,134,15,0,1,224,0,0,7,192,7,128,0,0,1,224,14,0,0,0,0,112,28,0,0,0,0,56,24,0,0,0,0,24,56,0,0,0,0,24,48,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,62,0,0,0,0,12,63,0,0,0,0,12,3,128,0,0,0,252,1,192,0,0,3,252,0,192,0,0,3,0,0,192,0,0,6,0,0,192,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,96,0,0,28,0,0,120,0,0,56,0,0,30,0,0,112,0,0,7,128,1,224,0,0,1,192,3,128,0,0,0,224,3,0,0,0,0,96,6,0,0,0,0,112,14,0,0,0,0,60,60,0,0,0,0,31,248,0,0,0,0,7,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,0,0,0,0,63,252,0,0,0,0,248,62,0,0,0,1,224,7,0,0,0,1,128,3,128,0,0,3,0,1,192,0,0,7,0,0,192,0,0,6,0,0,96,0,0,6,0,0,96,0,0,12,0,0,112,0,0,12,1,2,48,0,0,28,3,134,48,0,0,24,3,135,24,0,0,56,3,135,24,0,0,112,3,135,14,0,1,224,1,2,15,128,3,192,0,0,3,224,7,0,0,0,0,240,14,0,0,0,0,56,28,0,0,0,0,56,24,0,0,0,0,24,56,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,56,0,0,0,0,12,62,0,0,0,0,12,15,128,0,0,0,124,1,192,0,0,1,252,0,192,0,0,3,128,0,192,0,0,7,0,0,192,0,0,6,0,0,64,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,112,0,0,28,0,0,60,0,0,120,0,0,15,0,0,240,0,0,3,128,1,192,0,0,1,192,3,0,0,0,0,224,7,0,0,0,0,112,14,0,0,0,0,56,28,0,0,0,0,31,248,0,0,0,0,15,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,248,0,0,0,0,127,254,0,0,0,0,224,15,0,0,0,1,192,3,128,0,0,3,128,1,192,0,0,3,0,0,192,0,0,6,0,0,224,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,48,0,0,28,3,134,48,0,0,24,3,134,56,0,0,24,3,135,24,0,0,56,3,135,28,0,0,240,3,6,15,0,3,224,0,0,7,192,7,128,0,0,1,224,14,0,0,0,0,112,28,0,0,0,0,56,24,0,0,0,0,24,56,0,0,0,0,24,48,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,62,0,0,0,0,12,31,0,0,0,0,12,3,128,0,0,0,252,1,192,0,0,3,252,0,192,0,0,7,0,0,192,0,0,6,0,0,192,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,96,0,0,28,0,0,56,0,0,56,0,0,30,0,0,112,0,0,7,128,1,224,0,0,1,192,3,128,0,0,0,224,7,0,0,0,0,96,6,0,0,0,0,112,12,0,0,0,0,60,124,0,0,0,0,31,240,0,0,0,0,3,192,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,240,0,0,0,0,127,252,0,0,0,0,248,31,0,0,0,1,224,7,128,0,0,1,128,1,128,0,0,3,0,0,192,0,0,7,0,0,192,0,0,6,0,0,96,0,0,6,0,0,96,0,0,12,0,0,48,0,0,12,4,24,48,0,0,24,12,24,56,0,0,24,12,56,24,0,0,56,14,24,28,0,0,112,12,24,14,0,1,224,0,0,7,192,3,192,0,0,3,224,7,0,0,0,0,112,12,0,0,0,0,56,24,0,0,0,0,24,24,0,0,0,0,24,48,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,56,0,0,0,0,12,63,0,0,0,0,12,3,128,0,0,0,124,1,192,0,0,1,252,0,192,0,0,3,128,0,192,0,0,7,0,0,192,0,0,6,0,0,224,0,0,6,0,0,96,0,0,12,0,0,96,0,0,12,0,0,120,0,0,24,0,0,62,0,0,120,0,0,15,128,0,240,0,0,3,192,1,192,0,0,0,192,3,0,0,0,0,96,7,0,0,0,0,112,14,0,0,0,0,56,60,0,0,0,0,31,248,0,0,0,0,7,224,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,0,0,0,0,63,248,0,0,0,0,126,126,0,0,0,0,224,7,0,0,0,1,192,3,128,0,0,3,128,1,192,0,0,7,0,0,192,0,0,6,0,0,224,0,0,6,0,0,96,0,0,14,0,0,112,0,0,12,32,0,48,0,0,28,48,224,48,0,0,24,112,224,24,0,0,24,112,224,24,0,0,48,48,224,28,0,0,224,32,64,15,128,3,192,0,0,3,192,7,0,0,0,0,240,14,0,0,0,0,112,28,0,0,0,0,56,24,0,0,0,0,24,56,0,0,0,0,28,48,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,62,0,0,0,0,12,31,128,0,0,0,12,1,128,0,0,1,252,0,192,0,0,3,240,0,192,0,0,7,0,0,192,0,0,6,0,0,64,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,112,0,0,28,0,0,60,0,0,56,0,0,31,0,0,240,0,0,3,128,1,224,0,0,1,192,3,128,0,0,0,224,7,0,0,0,0,112,14,0,0,0,0,56,28,0,0,0,0,63,248,0,0,0,0,15,240,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,248,0,0,0,0,127,254,0,0,0,0,224,15,0,0,0,1,192,3,128,0,0,3,128,1,192,0,0,3,0,0,192,0,0,6,0,0,224,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,48,0,0,28,48,192,48,0,0,28,112,224,56,0,0,24,112,224,24,0,0,56,112,224,28,0,0,240,48,192,15,0,3,224,0,0,7,192,7,128,0,0,1,224,14,0,0,0,0,112,28,0,0,0,0,56,24,0,0,0,0,24,56,0,0,0,0,24,48,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,62,0,0,0,0,12,31,0,0,0,0,12,3,128,0,0,0,252,1,192,0,0,3,252,0,192,0,0,3,0,0,192,0,0,6,0,0,192,0,0,6,0,0,96,0,0,14,0,0,96,0,0,12,0,0,96,0,0,28,0,0,56,0,0,56,0,0,30,0,0,112,0,0,7,128,1,224,0,0,1,192,3,128,0,0,0,224,7,0,0,0,0,96,6,0,0,0,0,112,14,0,0,0,0,60,124,0,0,0,0,31,240,0,0,0,0,3,192,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,248,0,0,0,0,127,254,0,0,0,0,240,15,0,0,0,1,192,7,128,0,0,3,128,1,128,0,0,3,0,0,192,0,0,6,0,0,224,0,0,6,0,0,96,0,0,6,0,0,96,0,0,12,0,0,48,0,0,12,48,64,48,0,0,24,112,224,56,0,0,24,112,224,24,0,0,56,112,224,28,0,0,240,48,224,15,0,3,224,0,0,7,192,7,128,0,0,1,224,14,0,0,0,0,112,12,0,0,0,0,56,24,0,0,0,0,24,24,0,0,0,0,24,48,0,0,0,0,12,48,0,0,0,0,12,48,0,0,0,0,12,60,0,0,0,0,12,63,0,0,0,0,12,3,128,0,0,0,252,1,192,0,0,1,252,0,192,0,0,3,128,0,192,0,0,6,0,0,192,0,0,6,0,0,96,0,0,6,0,0,96,0,0,12,0,0,96,0,0,12,0,0,120,0,0,56,0,0,62,0,0,120,0,0,7,128,1,224,0,0,1,192,3,192,0,0,0,224,3,0,0,0,0,96,6,0,0,0,0,112,14,0,0,0,0,60,124,0,0,0,0,31,248,0,0,0,0,7,224,0,0}
};

bool button_pressed() {
  return digitalRead(ENCODER_BUTTON) == LOW;}

void idle_state(){
  static int idle_frame = 0;
  oled.clearDisplay();
  oled.drawBitmap(40, 8, idle_frames[idle_frame], FRAME_WIDTH, FRAME_HEIGHT, 1);
  oled.display();
  idle_frame = (idle_frame + 1) % IDLE_FRAME_COUNT;
  delay(FRAME_DELAY);
  }



void config_study_state() {
    static int pixels_to_show = -1;
    static long lastPos = -1;

    
    if (pixels_to_show == -1) {
        NeoPixel.clear();
        pixels_to_show = floor(study_time / STUDY_PIXELS_PER_MINS) - 1;
        Serial.println("pixels to show: ");
        Serial.println(pixels_to_show);
        for (int i = 0; i <= pixels_to_show; i++) {
            NeoPixel.setPixelColor(i, NeoPixel.Color(STUDY_MIN_COLOR));
            NeoPixel.show();
            delay(200); 
        }
    }

    
    long newPos = knob.read() / 4; // 1 click per detent

    if (lastPos==-1){
      lastPos=newPos;
    }


    if (newPos != lastPos) {
        if (newPos > lastPos && study_time < MAX_STUDY_TIME) {
            Serial.println("+5 min");
            study_time += STUDY_PIXELS_PER_MINS;
            Serial.println(study_time);
            pixels_to_show++;
            NeoPixel.setPixelColor(pixels_to_show, NeoPixel.Color(STUDY_ADDITIONAL_TIME));
            NeoPixel.show();
        } else if (newPos < lastPos && study_time > MIN_STUDY_TIME) {
            Serial.println("-5 min");
            study_time -= STUDY_PIXELS_PER_MINS;
            Serial.println(study_time);
            NeoPixel.setPixelColor(pixels_to_show, NeoPixel.Color(0, 0, 0));
            pixels_to_show--;
            NeoPixel.show();
        }
        lastPos = newPos;
    }
}



void config_break_state() {
    static int pixels_to_show = -1;
    static long lastPos = -1;

    
    if (pixels_to_show == -1) {
        NeoPixel.clear();
        pixels_to_show = floor(break_time / BREAK_PIXELS_PER_MINS) - 1;
        Serial.println("pixels to show: ");
        Serial.println(pixels_to_show);
        for (int i = 0; i <= pixels_to_show; i++) {
            NeoPixel.setPixelColor(i, NeoPixel.Color(BREAK_MIN_COLOR));
            NeoPixel.show();
            delay(200); 
        }
    }

    
    long newPos = knob.read() / 4; // 1 click per detent

    if (lastPos==-1){
      lastPos=newPos;
    }


    if (newPos != lastPos) {
        if (newPos > lastPos && break_time < MAX_BREAK_TIME) {
            Serial.println("+1 min");
            break_time += BREAK_PIXELS_PER_MINS;
            Serial.println(break_time);
            pixels_to_show++;
            NeoPixel.setPixelColor(pixels_to_show, NeoPixel.Color(BREAK_ADDITIONAL_TIME));
            NeoPixel.show();
        } else if (newPos < lastPos && break_time > MIN_BREAK_TIME) {
            Serial.println("-1 min");
            break_time -= BREAK_PIXELS_PER_MINS;
            Serial.println(break_time);
            NeoPixel.setPixelColor(pixels_to_show, NeoPixel.Color(0, 0, 0));
            pixels_to_show--;
            NeoPixel.show();
        }
        lastPos = newPos;
    }
}

void config_cycle_state(){
    static int pixels_to_show = -1;
    static long lastPos = -1;

    
    if (pixels_to_show == -1) {
        NeoPixel.clear();
        pixels_to_show = floor(cycle / CYCLE_PIXELS_PER_MINS) - 1;
        Serial.println("pixels to show: ");
        Serial.println(pixels_to_show);
        for (int i = 0; i <= pixels_to_show; i++) {
            NeoPixel.setPixelColor(i, NeoPixel.Color(CYCLE_MIN_COLOR));
            NeoPixel.show();
            delay(200); 
        }
    }

    
    long newPos = knob.read() / 4; // 1 click per detent

    if (lastPos==-1){
      lastPos=newPos;
    }

    if (newPos != lastPos) {
        if (newPos > lastPos && cycle < MAX_CYCLE_TIME) {
            Serial.println("+1 min");
            cycle += CYCLE_PIXELS_PER_MINS;
            pixels_to_show++;
            NeoPixel.setPixelColor(pixels_to_show, NeoPixel.Color(CYCLE_ADDITIONAL_TIME));
            NeoPixel.show();
        } else if (newPos < lastPos && cycle > MIN_CYCLE_TIME) {
            Serial.println("-1 min");
            cycle -= CYCLE_PIXELS_PER_MINS;
            NeoPixel.setPixelColor(pixels_to_show, NeoPixel.Color(0, 0, 0));
            pixels_to_show--;
            NeoPixel.show();
        }
        lastPos = newPos;
    }
}


void study_state() {
    static DateTime last;
    static int temp_study_time = -1;

    
    if (temp_study_time == -1) {
        temp_study_time = study_time;  
        last = rtc.now();
    }

    
    NeoPixel.clear();
    int pixels_to_show = floor(temp_study_time / STUDY_PIXELS_PER_MINS);
    for (int pixel = 0; pixel < pixels_to_show; pixel++) {
        NeoPixel.setPixelColor(pixel, NeoPixel.Color(STUDY_MIN_COLOR));
    }
    NeoPixel.show();

    DateTime now = rtc.now();
    long diffSeconds = now.unixtime() - last.unixtime();
    if (diffSeconds >= 5) {   
        last = now;
        temp_study_time -= STUDY_PIXELS_PER_MINS;
    }

    
    if (temp_study_time <= 0) {
        temp_study_time = -1;
        NeoPixel.clear();
        NeoPixel.show();       
        currentState = STATE_BREAK; 
    }
}


void break_state(){
    static DateTime last;
    static int temp_break_time = -1;

    
    if (temp_break_time == -1) {
        temp_break_time = break_time;
        last = rtc.now();
    }

    
    NeoPixel.clear();
    int pixels_to_show = floor(temp_break_time / BREAK_PIXELS_PER_MINS);
    for (int pixel = 0; pixel < pixels_to_show; pixel++) {
        NeoPixel.setPixelColor(pixel, NeoPixel.Color(BREAK_MIN_COLOR));
    }
    NeoPixel.show();

    
    DateTime now = rtc.now();
    long diffSeconds = now.unixtime() - last.unixtime();
    if (diffSeconds >= 1) {   
        last = now;
        temp_break_time -= BREAK_PIXELS_PER_MINS;
    }

    if (temp_break_time <= 0) {
        temp_break_time = -1; 
        cycle--;
        NeoPixel.clear();
        NeoPixel.show();
        currentState = STATE_IDLE; 
    }
}

void setup() {
  Serial.begin(9600);
  study_time%=MAX_STUDY_TIME+1; 
  break_time%=MAX_BREAK_TIME+1;

  if(study_time<MIN_STUDY_TIME){
    study_time=MIN_STUDY_TIME;
    if (cycle==0){
      study_time=0;
    }
    else{
      break_time=MIN_BREAK_TIME;
    }
  }
  
  NeoPixel.begin();  
  Wire.begin();
  oled.begin(SSD1306_SWITCHCAPVCC, 0x3c);
  rtc.begin();
  pinMode(ENCODER_CLK, INPUT); 
  pinMode(ENCODER_DT, INPUT);
  pinMode(ENCODER_BUTTON, INPUT_PULLUP);
}

void loop() {
  switch (currentState) {
    case STATE_IDLE:
      idle_state();
      if (button_pressed()) {
        currentState = STATE_CONFIG_STUDY;
        oled.clearDisplay();
        oled.display();
        Serial.println("Exiting idle state");
      }
      break;

    case STATE_CONFIG_STUDY:
      config_study_state();
      if (button_pressed()) {
        Serial.println("Exiting config study state");
        currentState = STATE_CONFIG_BREAK;  
      }
      break;

    case STATE_CONFIG_BREAK:
      config_break_state();  
      if (button_pressed()) {
        Serial.println("Exiting config break state");
        currentState = STATE_CONFIG_CYCLE;
      }
      break;
    
    case STATE_CONFIG_CYCLE:
      config_cycle_state();  
      if (button_pressed()) {
        Serial.println("Exiting config cycle state");
        currentState = STATE_STUDY;
      }
      break;

    case STATE_STUDY:
      study_state();
      break;

    case STATE_BREAK:
      break_state();
      break;
  }
}